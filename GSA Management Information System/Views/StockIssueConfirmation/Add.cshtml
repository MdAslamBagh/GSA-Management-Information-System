@model GSA_Management_Information_System.Models.StockIssueConfirmation
@{
    ViewBag.Title = "SaveResult";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Stock Issue Confirmation</h4>
        <hr />
        <input type="hidden" name="SIssuedCode" value="@ViewBag.SIssuedCode" />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.SIssued_Code, "SIssued_Code", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.SIssued_Code, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SIssued_Code, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @*<div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.Issue_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Issue_Date, new { htmlAttributes = new { @class = "datepicker", id = "issuedate" } })
                    @Html.ValidationMessageFor(model => model.Issue_Date, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.Airlines_Code, "Airlines", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Airlines_Code, new { htmlAttributes = new { @class = "form-control", id = "airlinescode", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Airlines_Code, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        @*<div class="row">
                <div class="form-group">
                    @Html.LabelFor(model => model.SRecieved_Code, "SRecieved_Code", new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        <select name="SRecieved_Code" id="ReceivedId" class="form-control">
                            <option value="">Select Recieved Code </option>
                            @foreach (var StockRecieveInformation in ViewBag.StockRecievelist)
                            {
                                <option value="@StockRecieveInformation.SRecieved_Code">@StockRecieveInformation.SRecieved_Code</option>
                            }
                        </select><label id="regErrorMessage" style="color: red"></label>

                        @Html.ValidationMessageFor(model => model.SRecieved_Code)
                    </div>
                </div>
            </div>*@

        <div class="row">
            <div class="form-group">
                @Html.Label("From_TicketNo", new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.From_TicketNo, new { htmlAttributes = new { @class = "form-control", @MaxLength = "7", id = "fromticketNo", @readonly = "readonly" } })
                    @*<input type="text" name="fromticketNo" id="fromticketNo" class="form-control" />*@
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                @Html.Label("To_TicketNo", new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.To_TicketNo, new { htmlAttributes = new { @class = "form-control", @MaxLength = "7", id = "toticketNo", @readonly = "readonly" } })
                    @*<input type="text" name="toticketNo" id="toticketNo" class="form-control" />*@
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                @Html.Label("Ticket_Quantity", new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Ticket_Quantity, new { htmlAttributes = new { @class = "form-control", id = "ticketquantity", onkeyup = "QuantityTicketcheck()", @readonly = "readonly" } })
                    @*<input type="text" name="ticketquantity" id="ticketquantity" class="form-control" />*@
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.Customer_Code, "Customer_Code", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.Customer_Code, htmlAttributes: new { @class = "form-control", id = "customercode", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Customer_Code, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @*<div class="row">
                <div class="form-group">
                    @Html.Label("Airlines", new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        <select class="form-control" name="AirlinesId" id="AirlinesId">
                            <option value="">Select Airlines</option>
                        </select><label id="courseIdErrorMessage" style="color: red;"></label>
                    </div>
                </div>
            </div>*@

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextAreaFor(model => model.Remarks, 5, 55, new {  @readonly = true })
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" ,id= "status", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        @*<div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.Confirm_Date, htmlAttributes: new { @class = "hidden" })
                <div class="col-md-10">
                    @Html.Editor("Confirm_Date", new { htmlAttributes = new { @class = "hidden" } })
                    @Html.ValidationMessageFor(model => model.Confirm_Date, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.Confirm_Date, htmlAttributes: new { @class = "hidden" })
                <div class="col-md-10">
                    @Html.Editor("Confirm_Date", new { htmlAttributes = new { @class = "hidden" } })
                    @Html.ValidationMessageFor(model => model.Confirm_Date, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

            <div class="col-md-offset-2 col-md-10">
                <label id="RegErrorLabel" style="color: red"></label>
            </div>


            <div class="row">
                <div class="form-group">
                    <div class="col-md-6">
                        <div align="right">
                            <input type="submit" value="submit" class="btn btn-primary" />
                            <input type="reset" value="reset" class="btn btn-warning" />
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @*<div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" id="submit" name="submit" value="Save" class="btn btn-primary btn-sm" />
                    </div>
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <label id="saveSucessMessage" style="color: green"></label>
                <label id="saveErrorMessage" style="color: red"></label>
            </div>
        </div>
}




@section Scripts{
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/bundles/jqueryval"> </script>
    <script>
                  
            $("#SIssued_Code").keyup(function () {
                var regNo = $("#SIssued_Code").val();
                var jsonData = { sissued_Code: regNo };
                $("#ReceivedIdErrorMessage").text("");
                 $.ajax({
                     type: "POST",
                     url: "/StockIssueConfirmation/GetReceivedCodeById",
                     contentType: "application/json; charset=utf-8",
                     data: JSON.stringify(jsonData),
                     dataType:"json",
                     success: function (data) {
                       //  alert("Success ");                      
                         $("#airlinescode").val(data.Airlines_Code);
                         $("#fromticketNo").val(data.From_TicketNo);
                         $("#toticketNo").val(data.To_TicketNo);
                             //$("#issuedate").val(value.Issue_Date);
                         $("#ticketquantity").val(data.Ticket_Quantity);
                         $("#customercode").val(data.Customer_Code);
                         $("#Remarks").val(data.Remarks);
                             $('#status').val("Confirmed");
                             ticketQuantity = data.Ticket_Quantity;
                             FromTicketNoo = data.From_TicketNo;
                             ToTicketNoo = data.To_TicketNo;
                         },
                });

                 return false;
             });


        $(document).ready(function () {
            $("#SIssued_Code").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/StockIssueConfirmation/GetIssue_Code",
                        type: "POST",
                        dataType: "json",
                        data: { Prefix: request.term },

                        success: function (data) {

                            response($.map(data, function (item) {

                                return {
                                    label: item.SIssued_Code,
                                    value: item.SIssued_Code,



                                };


                            }))

                        }
                    })
                },
                messages: {
                    noResults: "",
                    results: function (count) {
                        return count + (count > 1 ? ' results' : ' result ') + ' found';
                    }
                }
            });
        })
      
    </script>
}





