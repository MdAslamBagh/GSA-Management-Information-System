@model GSA_Management_Information_System.Models.StockIssueInformation

@{
    ViewBag.Title = "Edit";
}
<meta name="viewport" content="width=device-width, initial-scale=1">

@using (Html.BeginForm("Edit", "StockIssueInformation", FormMethod.Post, new { onSubmit = "return SubmitForm(this)" }))
            {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.SIssueId)
    <div class="form-horizontal">

        <div class="container">
            <div class="card ">
                <div class="card-header bg-info">Stock Issue Information</div>
                <div class="row">
                    <div class="form-group">
                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">SIssued_Code<font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.Editor("SIssued_Code", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", id = "issuecode" } })
                                @Html.ValidationMessageFor(model => model.SIssued_Code, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">Issue_Date<font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.Editor("Issue_Date", new { htmlAttributes = new { @class = "datepicker" } })
                                @Html.ValidationMessageFor(model => model.Issue_Date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">Airlines<font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.DropDownList("Airlines_Code", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Airlines_Code, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="accessname" class="col-md-3 col-sm-5">SRecieved Code <font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.Editor("SRecieved_Code", new { htmlAttributes = new { @class = "form-control", id = "srreceivecode" } })
                                @Html.ValidationMessageFor(model => model.SRecieved_Code, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-10 col-sm-12 ">
                            @Html.LabelFor(model => model.Stock_Type, htmlAttributes: new { @class = "hidden" })
                            <div class="col-md-6 col-sm-7">
                                @Html.DropDownListFor(Model => Model.Stock_Type, new SelectList(ViewBag.list), htmlAttributes: new { @class = "hidden" })
                                @*@Html.DropDownListFor(Model => Model.SR_Type, new SelectList(ViewBag.list), htmlAttributes: new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(model => model.Stock_Type, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">From_TicketNo<font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.EditorFor(model => model.From_TicketNo, new { htmlAttributes = new { @class = "form-control", id = "fromticketNo", @maxlength = "7", onchange = "StartingTicketcheck()" } })
                                @Html.ValidationMessageFor(model => model.From_TicketNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-10 col-sm-6 ">
                            <label class="col-sm-3"></label>
                            <div class="col-md-6 col-sm-7">
                                <p id="Status" />
                            </div>
                        </div>

                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">To_TicketNo<font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.EditorFor(model => model.To_TicketNo, new { htmlAttributes = new { @class = "form-control", id = "toticketNo", @maxlength = "7", onchange = "EndingTicketCheck()" } })
                                @Html.ValidationMessageFor(model => model.To_TicketNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-10 col-sm-6 ">
                            <label class="col-sm-3"></label>
                            <div class="col-md-6 col-sm-7">
                                <p id="Statuss" />
                            </div>
                        </div>


                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">Ticket_Quantity<font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.EditorFor(model => model.Ticket_Quantity, new { htmlAttributes = new { @class = "form-control", id = "ticketquantity", onkeyup = "QuantityTicketcheck()" } })
                                @Html.ValidationMessageFor(model => model.Ticket_Quantity, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">Customer<font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.TextBoxFor(model => model.Customer_Code, htmlAttributes: new { @class = "form-control", id = "customercode" })
                                @Html.ValidationMessageFor(model => model.Customer_Code, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">Transaction_Status<font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.EditorFor(model => model.Transaction_Status, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Transaction_Status, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">Remarks<font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.TextAreaFor(model => model.Remarks, 2, 52, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-10 col-sm-12 ">
                            @Html.LabelFor(model => model.Confirm_Status, htmlAttributes: new { @class = "hidden" })
                            <div class="col-md-6 col-sm-7">
                                @Html.DropDownListFor(Model => Model.Confirm_Status, new SelectList(ViewBag.list2), htmlAttributes: new { @class = "hidden" })
                                @*@Html.DropDownListFor(Model => Model.Transaction_Status, new SelectList(ViewBag.list2), htmlAttributes: new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(model => model.Confirm_Status, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="form-group col-md-10 col-sm-12 ">
                            <div class="col-md-10">
                                <div align="center">
                                    <a class="btn btn-primary" style="margin-left:10px" onclick="location.href='@Url.Action("Index", "StockIssueInformation")'"><i class="fa fa-plus"></i>Back To List</a>
                                    <input type="submit" value="submit" class="btn btn-info" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts{
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/bundles/jqueryval"> </script>
    <script>
        var ticketQuantity = 0;
        var FromTicketNoo = 0;
        var ToTicketNoo = 0;

        $(document).ready(function () {

            $("#SRecieved_Code").keyup(function () {

                var receiveNo = $("#SRecieved_Code").val();
                if (receiveNo === '') {
                    $("#fromticketNo").val('');
                    $("#toticketNo").val('');
                    $("#ticketquantity").val('');
                    $("#customercode").val('');
                    $('#Transaction_Status').val('');
                }

                var jsonData = { srecieved_Code: receiveNo };
                $("#ReceivedIdErrorMessage").text("");
                $.ajax({
                    type: "POST",
                    url: "/StockIssueInformation/GetReceivedCodeById",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(jsonData),
                    dataType: "json",
                    success: function (data) {
                        //  alert("Success ");
                        //$.each(data, function (key, value) {

                        //    $("#fromticketNo").val(value.From_TicketNo);
                        //    $("#toticketNo").val(value.To_TicketNo);
                        //    $("#ticketquantity").val(value.Ticket_Quantity);
                        //    $("#customercode").val(value.Customer_Code);
                        //    $('#Transaction_Status').val("Issued");
                        //    ticketQuantity = value.Ticket_Quantity;
                        //    FromTicketNoo = value.From_TicketNo;
                        //    ToTicketNoo = value.To_TicketNo;
                        //});

                        $("#fromticketNo").val(data.From_TicketNo);
                        $("#toticketNo").val(data.To_TicketNo);
                        $("#ticketquantity").val(data.Ticket_Quantity);
                        $("#customercode").val(data.Customer_Code);
                        $('#Transaction_Status').val("Issued");
                        ticketQuantity = data.Ticket_Quantity;
                        FromTicketNoo = data.From_TicketNo;
                        ToTicketNoo = data.To_TicketNo;
                        StartingTicketcheck();
                        EndingTicketCheck();

                    },
                });

                return false;
            });


        $(document).ready(function () {
            $('#fromticketNo').keyup(function () {

                var max_chars = 7;
                if ($(this).val().length >= max_chars) {
                    $(this).val($(this).val().substr(0, max_chars));


                }

                var fromData = $('#fromticketNo').val();
                // Var quantty = $('#ticketquantity').val();

                if (fromData === '') {
                    $('#toticketNo').val('');
                    $('#ticketquantity').val('');
                }
                else {
                    if (!isNaN(fromData)) {
                        // $('#toticketNo').val(fromData);
                    }
                    else {
                        $('#toticketNo').val(0);
                        $('#ticketquantity').val(0);
                    }
                    printResult();
                }
            });
            $('#toticketNo').keyup(function () {

                var max_chars = 7;
                if ($(this).val().length >= max_chars) {
                    $(this).val($(this).val().substr(0, max_chars));
                }

                printResult();
            });

        });




        function printResult() {

            //if (toTicket < fromTicket) {
            //    $('#toTicket').val('');
            //    $('#ticketQuantity').val('');

            //}
            var from = $('#fromticketNo').val();
            var to = $('#toticketNo').val();
            // var qnty = $('#ticketquantity').val();
            //alert(from);
            if (!isNaN(from) && !isNaN(to) && from <= to) {
                //var diff = to - from;
                //if (diff < 0) {
                //  swal("Warning!!", "toTicket number must be equal or greater then fromTicket number!", "warning");
                //$('#toTicket').val('');
                //$('#ticketQuantity').val(0);



                $('#ticketquantity').val((to - from) + 1);

                if (ticketQuantity == (to - from) + 1) {
                    $('#Transaction_Status').val("Issued");
                }
                else {

                    $('#Transaction_Status').val("Partially");
                }





            }
            //else {
            //  $('#ticketQuantity').val((to - from) + 1);
            //  }
            //}
            else
                $('#ticketquantity').val(0);
        }

        var fromSuccess = true;
        var toSuccess = true;
        function checkingFrom() {
            var to = FromTicketNoo;
            var m = to.toString();
            var to = ToTicketNoo;
            var n = to.toString();

            var fromData = $('#fromticketNo').val();

            if (fromData >= m) { fromSuccess = true; checkingTo(); }
            if (fromData < m) fromSuccess = false;

        }
        function checkingTo() {
            var to = FromTicketNoo;
            var m = to.toString();
            var to = ToTicketNoo;
            var n = to.toString();
            var toData = $('#toticketNo').val();
            if (toData <= n) { toSuccess = true; doSubmit(); }
            if (toData > n) toSuccess = false;

        }

        function doSubmit() {
            if (fromSuccess && toSuccess) {
                $('#stockFormId').submit();
            } else {
                $('#stockFormId').failure();
                swal("Warning!!", "please fill the form!", "warning");
                //$('#').submit();
                //alert("failure")

            }
        }

        $(document).ready(function () {
            $("#SRecieved_Code").autocomplete({
                source: function (request, response) {
                    $.ajax({

                        url: "/StockIssueInformation/GetRecieved_Code",
                        type: "POST",
                        dataType: "json",
                        data: { Prefix: request.term },

                        success: function (data) {

                            response($.map(data, function (item) {

                                return {
                                    label: item.SRecieved_Code,
                                    value: item.SRecieved_Code,



                                };


                            }))

                        }
                    })
                },
                messages: {
                    noResults: "",
                    results: function (count) {
                        return count + (count > 1 ? ' results' : ' result ') + ' found';
                    }
                }
            });
        })
    </script>
}




<script>

        function StartingTicketcheck() {
            var receiveticketQuantity = 0;
            var receiveFromTicketNoo = 0;
            var receiveToTicketNoo = 0;


            $("#Status").html("checking...........");

            $.post("@Url.Action("StartingTicketDataEdit", "StockIssueInformation")",

            {
                fromdataa: $('#fromticketNo').val(),
                todataa: $('#toticketNo').val(),
                issuecode: $('#issuecode').val(),
                srreceivecode: $('#srreceivecode').val()
                //fromticket: $('#fromticketNo').val(),
                // toticket:$('#toticketNo').val()

            },
            function (result) {
                if (result.success == 1) {
                    //console.log(result);
                    //console.log(result.ssss.Receive_Fromticket);
                    var ReceiveFromTicket = result.pppp.From_TicketNo;
                    var ReceiveToTicket = result.pppp.From_TicketNo;

                    var FromTicketNo = $('#fromticketNo').val();



                    // var toData = $('#toticketNo').val();

                    if (FromTicketNo< ReceiveFromTicket) {
                        $("#Status").html('<font color="Red">Range Must be Between [' + ReceiveFromTicket + ' - ' + ReceiveToTicket + ']</font > ');
                        // $("#Status").html('<font color="Red">Range must be Between. Pease try another."</font>');
                        $('#fromticketNo').css("border-color", "Red");
                        //swal("The Stock Receive Range must be in between", "[" + m + "-" + n + "]");


                    }
                    else


                    $("#Status").html('<font color="Green">Ticket Available ! You Can take it</font>');
                    $('#fromticketNo').css("border-color", "Green");
                }




                //alert(result);
                else if (result.success == 3) {
                   
                    $("#Status").html('<font color="Green">Ticket Available ! You Can take it</font>');
                    $('#fromticketNo').css("border-color", "Green");
                }
                else {
                    //console.log(result.rejectList);
                    //alert(result.rejectList.length);
                    if (result.rejectList.length > 0) {
                        $("#Status").html('<font color="Red">Ticket No ' + result.rejectList + ' already Issued.Please try another.</font > ');
                        $('#fromticketNo').css("border-color", "Red");
                    }
                    else {
                        $("#Status").html('<font color="Red">Ending ticket already Issued. Please try another.</font>');
                        $('#fromticketNo').css("border-color", "Red");
                    }


                }
            });

         }


         function EndingTicketCheck() {

            $("#Statuss").html("checking...........");

            $.post("@Url.Action("EndingTicketDataEdit", "StockIssueInformation")",

            {
                fromdataa: $('#fromticketNo').val(),
                toDataa: $('#toticketNo').val(),
                issuecode: $('#issuecode').val()

            },
            function (result) {
                //alert(result);
                if (result.success == true) {


                    var to = FromTicketNoo;
                    var m = to.toString();
                    var to = ToTicketNoo;
                    var n = to.toString();

                    // var fromData = $('#fromticketNo').val();
                    var toData = $('#toticketNo').val();
                    if (toData > n) {
                        $("#Statuss").html('<font color="Red">Range Must be Between [' + m + ' - ' + n + ']</font > ');


                    }
                    else


                    $("#Statuss").html('<font color="Green">Ticket Available ! You Can take it</font>');
                    $('#toticketNo').css("border-color", "Green");
                }
                else {
                    //console.log(result.rejectList);
                    //alert(result.rejectList.length);
                    if (result.rejectList.length > 0) {
                        $("#Statuss").html('<font color="Red">Ticket No ' + result.rejectList + ' already Issued.Please try another.</font > ');
                        $('#toticketNo').css("border-color", "Red");
                    }
                    else {
                        $("#Statuss").html('<font color="Red">Ending ticket already Issued. Please try another.</font>');
                        $('#toticketNo').css("border-color", "Red");
                    }


                }
            });

         }



         @*function RangeTicketCheck() {

            $("#Statuss").html("checking...........");

            $.post("@Url.Action("RangeTicketData", "StockRecieveInformation")",

            {
                fromrangeDataa: $('#fromTicket').val(),
                torangeDataa: $('#toTicket').val()


            },
            function (result) {
                if (result == 1) {

                    $("#Statuss").html('<font color="Green">Ticket Available ! You Can take it</font>');
                    $('#toTicket').css("border-color", "Green");
                }
                else {

                    $("#Statuss").html('<font color="Red">Ending ticket already received. Pease try another."</font>');
                    $('#toTicket').css("border-color", "Red");


                }
            });

         }*@




         var fromSuccess = true;
         var toSuccess = true;
         function checkingFrom() {
             $.post("@Url.Action("StartingTicketData", "StockRecieveInformation")",
                 {
                     fromdataa: $('#fromTicket').val()
                 },
                 function (result) {
                     if (result.success == true) { fromSuccess = true; checkingTo(); }
                     if (result.success == false) { fromSuccess = false; doSubmit() };
                 });
         }
         function checkingTo() {
             $.post("@Url.Action("EndingTicketData", "StockRecieveInformation")",
                 {
                     fromdataa: $('#fromTicket').val(),
                     toDataa: $('#toTicket').val()

                 },
            function (result) {
                if (result.success == true) { toSuccess = true; doSubmit(); }
                if (result.success == false) { toSuccess = false; doSubmit(); }

            });
         }

         function doSubmit() {
             //alert("ok");
             if (fromSuccess && toSuccess) {
                 $('#stockFormId').submit();
             } else {
                $('#stockFormId').failure();
                 swal("Warning!!", "please fill the form!", "warning");
                 //$('#').submit();
                 //alert("failure")

             }
         }
</script>


<script>

         function QuantityTicketcheck() {

           // $("#Status").html("checking...........");

            $.post("@Url.Action("TicketQuantity", "StockIssueInformation")",

            {

                quantitydataa: $('#ticketquantity').val()

                },

            function (result) {
                if (result == 1) {
                    $('#Transaction_Status').val("ISSUED");

                    //$("#Status").html('<font color="Green">Ticket Available ! You Can take it</font>');
                    //$('#fromTicket').css("border-color", "Green");
                }
                else {
                    $('#Transaction_Status').val("Partially");
                    //$("#Status").html('<font color="Red">Starting ticket already received. Pease try another."</font>');
                    //$('#fromTicket').css("border-color", "Red");
                    //$('#fromTicket').val('');

                }
            });

        }


</script>












<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />


<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script>
         $(function () {
             $(".datepicker").datepicker({
                 dateFormat: "mm/dd/yy",
                 changemonth: true,
                 changeyear: true,
                 minDate: new Date(2018, 0, 1),
                 maxDate: new Date(2020, 0, 1),
                 showOn: "both",
                 buttonImage: "http://jqueryui.com/resources/demos/datepicker/images/calendar.gif",
                 buttonText: "Calender"
             });
         });
</script>


<script type="text/javascript">
         $(document).ready(function () {
             $("#customercode").autocomplete({
                 source: function (request, response) {
                     $.ajax({

                         url: "/StockIssueInformation/GetCustomer",
                         type: "POST",
                         dataType: "json",
                         data: { Prefix: request.term },

                         success: function (data) {

                             response($.map(data, function (item) {

                                 return {

                                     label: item.Customer_Code,
                                     value: item.Customer_Code,
                                     label: item.Customer_Name,





                                 };


                             }))

                         }
                     })
                 },
                 messages: {
                     noResults: "",
                     results: function (count) {
                         return count + (count > 1 ? ' results' : ' result ') + ' found';
                     }
                 }
             });
         })
</script>
