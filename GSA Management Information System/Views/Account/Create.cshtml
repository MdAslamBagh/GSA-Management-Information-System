@model GSA_Management_Information_System.Models.CreateViewModel

@{
    ViewBag.Title = "Create";
}
<meta name="viewport" content="width=device-width, initial-scale=1">

@using (Html.BeginForm("Create", "Account", FormMethod.Post, new { onSubmit = "return SubmitForm(this)" }))
            {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-horizontal">
        <div class="container">
            <div class="card ">
                <div class="card-header bg-info" style="height: 4rem;">Create User</div>
                <div class="row">
                    <div class="form-group">
                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="accessname" class="col-md-3 col-sm-5">Full Name<font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control",required="required" } })
                                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">Email<font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">UserName<font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">Company<font size="2px" color="red">*</font></label>
                            <div class="col-md-4 col-sm-7">
                                <input id="companyname" name="Company_Name" placeholder="Company Name" class="form-control" type="text" value="@ViewBag.Company_Name",required = "required">
                                @*<input id="companyname" name="Company_Name" placeholder="Company Name" class="form-control" type="text" value="@ViewBag.Company_Name">*@
                                @*@Html.EditorFor(model => model.com, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })*@
                            </div>
                            <div class="col-md-2 col-sm-7">
                                <input readonly="readonly" id="companycode" name="Company_Code" placeholder="Company Code" class="form-control" type="text" value="@ViewBag.Company_Code",required,readonly>
                                @*@Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })*@
                            </div>
                        </div>



                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">Branch<font size="2px" color="red">*</font></label>
                            <div class="col-md-4 col-sm-7">
                                <input id="branchname" name="Branch_Name" placeholder="Branch_Name" class="form-control" type="text" value="@ViewBag.Branch_Name",required = "required">
                                @*@Html.EditorFor(model => model.com, new { htmlAttributes = new { @class = "form-control" } })
                                 @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })*@
                            </div>
                            <div class="col-md-2 col-sm-7">
                                <input readonly="readonly" id="branchcode" name="Branch_Code" placeholder="Branch Code" class="form-control" type="text" value="@ViewBag.Branch_Code",required,readonly>
                                @*@Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                 @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })*@
                            </div>
                        </div>

                      


                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">Password<font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">Confirm Password<font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control",required = "required" } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group col-md-10 col-sm-12 ">
                            <div class="col-md-10">
                                <div align="center">
                                    <a class="btn btn-primary" style="margin-left:10px" onclick="location.href='@Url.Action("Index", "Account")'"><i class="fa fa-plus"></i>Back To List</a>
                                    <input type="submit" value="submit" class="btn btn-info" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />

@section scripts{
    @*<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>*@

<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.2/themes/smoothness/jquery-ui.css" />
<!-- Load jQuery JS -->
<script src="http://code.jquery.com/jquery-1.10.2.min.js"></script>
<!-- Load jQuery UI Main JS  -->
<script src="http://code.jquery.com/ui/1.10.2/jquery-ui.min.js"></script>
    <script>
           @*$(function () {
               $(".datepicker").datepicker({
                   dateFormat: "mm/dd/yy",
                   changemonth: true,
                   changeyear: true,
                   minDate: new Date(2018, 0, 1),
                   maxDate: new Date(2020, 0, 1),
                   showOn: "both",
                   buttonImage: "http://jqueryui.com/resources/demos/datepicker/images/calendar.gif",
                   buttonText: "Calender"
               });
           });
    </script>
    @Scripts.Render("~/bundles/jqueryval")*@



       
        //Company
        jQuery.noConflict()(function ($) {
            $("#companyname").keyup(function () {
                var companydata = $("#companyname").val();
                if (companydata === '') {
                    $('#companycode').val('');

                }
                else
                    var jsonData = { companyname: companydata };
                $("#ReceivedIdErrorMessage").text("");
                $.ajax({
                    type: "POST",
                    url: "/Account/GetCompanyCodeById",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(jsonData),
                    dataType: "json",
                    success: function (data) {
                        //  alert("Success ");
                        $("#companycode").val(data.Company_Code);

                    },
                });

                return false;
            });
            $("#companyname").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Account/Get_Company_Name",
                        type: "POST",
                        dataType: "json",
                        data: { Prefix: request.term },

                        success: function (data) {

                            response($.map(data, function (item) {

                                return {
                                    label: item.Company_Name,
                                    value: item.Company_Name,

                                };


                            }))

                        }
                    })
                },
                messages: {
                    noResults: "",
                    results: function (count) {
                        return count + (count > 1 ? ' results' : ' result ') + ' found';
                    }
                }
            });



            //Branch

            $("#branchname").keyup(function () {
                var branchData = $("#branchname").val();
                if (branchData === '') {
                    $('#branchcode').val('');
                }
                else
                    var jsonData = { branchname: branchData };
                $("#ReceivedIdErrorMessage").text("");
                $.ajax({
                    type: "POST",
                    url: "/Account/GetBranchCodeById",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(jsonData),
                    dataType: "json",
                    success: function (data) {
                        // alert("Success ");
                        $("#branchcode").val(data.Branch_Code);

                    },
                });

                return false;

            });
            $("#branchname").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Account/Get_Branch_Name",
                        type: "POST",
                        dataType: "json",
                        data: { Prefix: request.term },

                        success: function (data) {

                            response($.map(data, function (item) {

                                return {
                                    label: item.Branch_Name,
                                    value: item.Branch_Name,





                                };


                            }))

                        }
                    })
                },
                messages: {
                    noResults: "",
                    results: function (count) {
                        return count + (count > 1 ? ' results' : ' result ') + ' found';
                    }
                }

            });

        });
         
    </script>


     


}