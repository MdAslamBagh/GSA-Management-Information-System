@model GSA_Management_Information_System.Models.StockRecieveInformation

@{
    ViewBag.Title = "Edit";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>


@using (Html.BeginForm("Edit", "StockRecieveInformation", FormMethod.Post, new { @id = "stockFormId", @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.SRecievedId)

    <div class="form-horizontal">

        <div class="container">
            <div class="card ">
                <div class="card-header bg-info" style="height: 4rem;">Stock Edit Information</div>
                <div class="row">
                    <div class="form-group">
                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">SIssued_Code<font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.Editor("SRecieved_Code", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", id = "receivecode" } })
                                @Html.ValidationMessageFor(model => model.SRecieved_Code, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-10 col-sm-12 ">
                            @Html.LabelFor(model => model.SR_Type, htmlAttributes: new { @class = "hidden" })
                            <div class="col-md-6 col-sm-7">
                                @Html.DropDownListFor(Model => Model.SR_Type, new SelectList(ViewBag.list), htmlAttributes: new { @class = "hidden" })
                                @*@Html.DropDownListFor(Model => Model.SR_Type, new SelectList(ViewBag.list), htmlAttributes: new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(model => model.SR_Type, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group col-md-10 col-sm-12 ">
                            @Html.LabelFor(model => model.Trans_Date, htmlAttributes: new { @class = "hidden" })
                            <div class="col-md-6 col-sm-7">
                                @Html.Editor("Trans_Date", new { htmlAttributes = new { @class = "hidden" } })
                                @Html.ValidationMessageFor(model => model.Trans_Date, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">Airlines<font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.DropDownList("Airlines_Code", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Airlines_Code, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">From_TicketNo<font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.EditorFor(model => model.From_TicketNo, new { htmlAttributes = new { @class = "form-control", id = "fromTicket", @maxlength = "7", onchange = "StartingTicketcheck()" } })
                                @Html.ValidationMessageFor(model => model.From_TicketNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-10 col-sm-6 ">
                            <label class="col-sm-3"></label>
                            <div class="col-md-6 col-sm-7">
                                <p id="Status" />
                            </div>
                        </div>

                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">To_TicketNo<font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.EditorFor(model => model.To_TicketNo, new { htmlAttributes = new { @class = "form-control", id = "toTicket", @maxlength = "7", onchange = "EndingTicketCheck()" } })
                                @Html.ValidationMessageFor(model => model.To_TicketNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-10 col-sm-6 ">
                            <label class="col-sm-3"></label>
                            <div class="col-md-6 col-sm-7">
                                <p id="Statuss" />
                            </div>
                        </div>

                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">Ticket_Quantity<font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.EditorFor(model => model.Ticket_Quantity, new { htmlAttributes = new { @class = "form-control", id = "ticketQuantity", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Ticket_Quantity, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        @*<div class="row">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Customer_Name, "Customer_Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(model => model.Customer_Name, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Customer_Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>*@


                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">Customer<font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.TextBoxFor(model => model.Customer_Code, htmlAttributes: new { @class = "form-control", @Value = "CRGO-000001" })
                                @Html.ValidationMessageFor(model => model.Customer_Code, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-10 col-sm-12 ">
                            <label for="controllername" class="col-md-3 col-sm-5">Remarks<font size="2px" color="red">*</font></label>
                            <div class="col-md-6 col-sm-7">
                                @Html.TextAreaFor(model => model.Remarks, 2, 52, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-10 col-sm-12 ">
                            @Html.LabelFor(model => model.Issued, htmlAttributes: new { @class = "hidden" })
                            <div class="col-md-6 col-sm-7">
                                @Html.DropDownListFor(Model => Model.Issued, new SelectList(ViewBag.list3), htmlAttributes: new { @class = "hidden" })
                                @Html.ValidationMessageFor(model => model.Issued, "", new { @class = "hidden" })
                            </div>
                        </div>


                        <div class="form-group col-md-10 col-sm-12 ">
                            <div class="col-md-10">
                                <div align="center">
                                    <a class="btn btn-primary" style="margin-left:10px" onclick="location.href='@Url.Action("Index", "StockIssueInformation")'"><i class="fa fa-plus"></i>Back To List</a>
                                    <input type="submit" value="submit" class="btn btn-info" />
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>

}

<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />

@section scripts{
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script>
        var ticketQuantity = 0;
        var FromTicketNoo = 0;
        var ToTicketNoo = 0;
        $(function () {
            $(function () {
                $(".datepicker1").datepicker({
                    dateFormat: "mm/dd/yy",
                    changemonth: true,
                    changeyear: true,
                    minDate: new Date(2018, 0, 1),
                    maxDate: new Date(2020, 0, 1),
                    showOn: "both",
                    buttonImage: "http://jqueryui.com/resources/demos/datepicker/images/calendar.gif",
                    buttonText: "Calender"
                });
            });
            $(".datepicker2").datepicker({
                dateFormat: "mm/dd/yy",
                changemonth: true,
                changeyear: true,
                minDate: new Date(2018, 0, 1),
                maxDate: new Date(2020, 0, 1),
                showOn: "both",
                buttonImage: "http://jqueryui.com/resources/demos/datepicker/images/calendar.gif",
                buttonText: "Calender"
            });
        });

    </script>
}


<script>

         function StartingTicketcheck() {


            $("#Status").html("checking...........");

            $.post("@Url.Action("StartingTicketDataEdit", "StockRecieveInformation")",

            {

                fromdataa: $('#fromTicket').val(),
                receivecode: $('#receivecode').val()

                },

            function (result) {
                if (result.success == true) {

                    $("#Status").html('<font color="Green">Ticket Available ! You Can take it</font>');
                    $('#fromTicket').css("border-color", "Green");
                }
                else {

                    $("#Status").html('<font color="Red">Starting ticket already taken. Pease try another."</font>');
                    $('#fromTicket').css("border-color", "Red");
                    //$('#fromTicket').val('');

                }
            });

    }

         function EndingTicketCheck() {

            $("#Statuss").html("checking...........");

            $.post("@Url.Action("EndingTicketDataEdit", "StockRecieveInformation")",

            {
                fromdataa: $('#fromTicket').val(),
                toDataa: $('#toTicket').val(),
                receivecode: $('#receivecode').val()

            },
            function (result) {
                //alert(result);
                if (result.success == true) {

                    $("#Statuss").html('<font color="Green">Ticket Available ! You Can take it</font>');
                    $('#toTicket').css("border-color", "Green");
                }
                else {
                    //console.log(result.rejectList);
                    //alert(result.rejectList.length);
                    if (result.rejectList.length > 1) {
                        $("#Statuss").html('<font color="Red">Ticket No ' + result.rejectList + ' already taken.Please try another.</font > ');
                        $('#toTicket').css("border-color", "Red");
                    }
                    else {
                        $("#Statuss").html('<font color="Red">Ending ticket already taken. Please try another.</font>');
                        $('#toTicket').css("border-color", "Red");
                    }


                }
            });

         }



         @*function RangeTicketCheck() {

            $("#Statuss").html("checking...........");

            $.post("@Url.Action("RangeTicketData", "StockRecieveInformation")",

            {
                fromrangeDataa: $('#fromTicket').val(),
                torangeDataa: $('#toTicket').val()


            },
            function (result) {
                if (result == 1) {

                    $("#Statuss").html('<font color="Green">Ticket Available ! You Can take it</font>');
                    $('#toTicket').css("border-color", "Green");
                }
                else {

                    $("#Statuss").html('<font color="Red">Ending ticket already received. Pease try another."</font>');
                    $('#toTicket').css("border-color", "Red");


                }
            });

         }*@




         var fromSuccess = true;
         var toSuccess = true;
         function checkingFrom() {
             $.post("@Url.Action("StartingTicketDataEdit", "StockRecieveInformation")",
                 {
                     fromdataa: $('#fromTicket').val(),
                     receivecode: $('#receivecode').val()
                 },
                 function (result) {
                     if (result.success == true) { fromSuccess = true; checkingTo(); }
                     if (result.success == false) { fromSuccess = false; doSubmit() };
                 });
         }
         function checkingTo() {
             $.post("@Url.Action("EndingTicketDataEdit", "StockRecieveInformation")",
                 {
                     fromdataa: $('#fromTicket').val(),
                     toDataa: $('#toTicket').val(),
                     receivecode: $('#receivecode').val()

                 },
            function (result) {
                if (result.success == true) { toSuccess = true; doSubmit(); }
                if (result.success == false) { toSuccess = false; doSubmit(); }

            });
         }

         function doSubmit() {
             //alert("ok");
             if (fromSuccess && toSuccess) {
                 $('#stockFormId').submit();
             } else {
                $('#stockFormId').failure();
                 swal("Warning!!", "please fill the form!", "warning");
                 //$('#').submit();
                 //alert("failure")

             }
         }
</script>










<script>
         $(document).ready(function () {
             $('#fromTicket').keyup(function () {
                 var max_chars = 7;
                 if ($(this).val().length >= max_chars) {
                     $(this).val($(this).val().substr(0, max_chars));


                 }
                 var fromData = $('#fromTicket').val();
                 if (fromData === '') {
                     $('#toTicket').val('');
                     $('#ticketQuantity').val('');
                 } else {
                     if (!isNaN(fromData)) {
                         $('#toTicket').val(fromData);
                     }
                     else {
                         $('#toTicket').val(0);
                         $('#ticketQuantity').val(0);
                     }
                     printResult();
                 }
             });
             $('#toTicket').keyup(function () {
                 var max_chars = 7;
                 if ($(this).val().length >= max_chars) {
                     $(this).val($(this).val().substr(0, max_chars));
                 }
                 printResult();


             });

         });


         function printResult() {


             //if (toTicket < fromTicket) {
             //    $('#toTicket').val('');
             //    $('#ticketQuantity').val('');

             //}
             var from = $('#fromTicket').val();
             var to = $('#toTicket').val();
             //alert(from);
             if (!isNaN(from) && !isNaN(to) && from <= to) {
                 //var diff = to - from;
                 //if (diff < 0) {
                 //  swal("Warning!!", "toTicket number must be equal or greater then fromTicket number!", "warning");
                 //$('#toTicket').val('');
                 //$('#ticketQuantity').val(0);

                 $('#ticketQuantity').val((to - from) + 1);


             }
             //else {
             //  $('#ticketQuantity').val((to - from) + 1);
             //  }
             //}
             else $('#ticketQuantity').val(0);
         }


</script>













<script type="text/javascript">
         $(document).ready(function () {
             $("#Customer_Code").autocomplete({
                 source: function (request, response) {
                     $.ajax({

                         url: "/StockRecieveInformation/GetCustomer",
                         type: "POST",
                         dataType: "json",
                         data: { Prefix: request.term },

                         success: function (data) {

                             response($.map(data, function (item) {

                                 return {

                                     label: item.Customer_Code,
                                     value: item.Customer_Code,
                                     label: item.Customer_Name,





                                 };


                             }))

                         }
                     })
                 },
                 messages: {
                     noResults: "",
                     results: function (count) {
                         return count + (count > 1 ? ' results' : ' result ') + ' found';
                     }
                 }
             });
         })
</script>
